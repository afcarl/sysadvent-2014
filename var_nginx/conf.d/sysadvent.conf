server {
	listen 3131;
	server_name 127.0.0.1 localhost;
	lua_need_request_body on;
	client_max_body_size 2048M;
	default_type text/html;
	index index.html;
	underscores_in_headers on;
	set $template_root '/var/nginx/html';

	location /wssredir {
		content_by_lua_file "/var/nginx/lua/wssredir.lua";
	}

	location /wssproxy {
		resolver 8.8.8.8;
		proxy_max_temp_file_size 0;
		proxy_buffering off;
		proxy_connect_timeout 1d;
		proxy_read_timeout 1d;
		proxy_send_timeout 1d;
		set_unescape_uri $clean_url $arg_url;
		proxy_pass $clean_url;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
	}

	location /capture {
		internal;
		proxy_buffering off;
		proxy_max_temp_file_size 0;
		resolver 8.8.8.8;
		set_unescape_uri $clean_url $arg_url;
		proxy_pass $clean_url;
	}

	location /content_by_lua {
		content_by_lua '
			local username = ngx.var.arg_username or "Anonymous"
      local content = [[
      <p>The simplest usage of lua in nginx is the <i>content_by_lua</i> directive.</p>
      <p>It is used inside an nginx location block:</p>
      <pre>
      location /foo {
        content_by_lua \'
        local username = "bob"
        ngx.say("hello ", username)
        ngx.exit(ngx.OK)
        \'
      }</pre>
      <p>The contents above are actual lua code and the end result of calling <i>/foo</i> would be:</p>
      <pre>hello bob</pre>
      ]]

      ngx.say(bootstrap_header)
      ngx.say("<div class=\\"content\\">")
			ngx.say("<h2>Hello, ", username, ".")
			ngx.say("<sub>(Maybe you wanted to log in as a user? <a href=/content_by_lua/?username=sysadvent>Click here!</a>)</sub></h2>")
      ngx.say(content)
      ngx.say("</div><!-- content -->")
      ngx.say(bootstrap_footer)
			ngx.exit(ngx.OK)
		';
	}

	location /repl {
		content_by_lua_file "/var/nginx/lua/repl.lua";
	}

	location /github {
		content_by_lua_file "/var/nginx/lua/github.lua";
	}

	location /content_by_lua_file {
		content_by_lua_file "/var/nginx/lua/luafile_content.lua";
	}

	location /header_dump {
		content_by_lua_file "/var/nginx/lua/headers.lua";
	}

	location /shared_dict {
		content_by_lua_file "/var/nginx/lua/shared_dict.lua";
	}

	location /load_balancer {
    set_by_lua $backend_node '
      local backends = ngx.shared.ng_loadbalancers
      local candidates = backends:get_keys()
      return backends:get(candidates[math.random(#candidates)])
    ';
		proxy_buffering off;
		proxy_max_temp_file_size 0;
		resolver 8.8.8.8;
		proxy_pass http://$backend_node;


	}

  	location /lbws {
    		content_by_lua_file "/var/nginx/lua/lbws.lua";
  	}

	location /templates {
		content_by_lua_file "/var/nginx/lua/resty_template.lua";
	}

	location /auth {
		access_by_lua_file "/var/nginx/lua/auth.lua";
		content_by_lua_file "/var/nginx/lua/auth.lua";
	}

  location /slack-sse {
    chunked_transfer_encoding off;
    proxy_pass http://127.0.0.1:3131/slack;
    proxy_buffering off;
    proxy_cache off;
    proxy_set_header Connection '';
    proxy_http_version 1.1;
  }

	location /slack {
		content_by_lua_file "/var/nginx/lua/slack.lua";
	}

	location / {
		root "/var/nginx/html";
	}
}
